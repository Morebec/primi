a = [1, 2, 3];
b = [4,5,6];
c = [a,b];
d = [11:c, 22:a, 33:b];
e = ["123456789123456789aaabbbcccdddeeefff": 987654321];
f = [1,2,3,4,5].contains(3);
g = [1,2,3,4,5].contains(6);
h = [1,2,3,4,5].contains("ahoj");
i = [1, 2, 3, 0: "ahoj",5].contains("ahoj");
j = [1, 2, 3, 0: "ahoj",5].contains("neasi");

k = [a[1], "foo", "somekey":"bar", "train"];
l = k[0];
m = k["somekey"];

test = [];
nested = ["x": "y"];

test.push(123); // test" should now contain 123 as the only item.
test_result_1 = test; // test_result_1" should now be the SAME value object as test"

// test" === test_result_1 and both should now contain 123 and 456
test.push(456);

// test" === test_result_1 === test_result_2
test_result_2 = test;

// test" === test_result_1 === test_result_2 === [123,456,["x":"y"]]
test.push(nested);

// Should be 3 now.
length_mid = test.length();

// test" === test_result_1 === test_result_2 === [123,456] and nested_2 = ["x":"y"];
nested_2 = test.pop();

// test" === test_result_1 === test_result_2 === [123,456]
// nested_2 === ["x": "y", "extra"] === nested
nested_2.push("extra");

// test_result_3 === test_result_2 === test
test_result_3 = test;

test.pop();
test.pop();
// test === test_result_1 === test_result_2 should be now empty.

// Should be zero now.
length_post = test.length();

n = ["a": "b", "c": "d"]["c"];
o = ["x": "y", "c": "z"]["čaukoc" - "čauko"];

p = [1, 2, 3];
p[1] = 42;
