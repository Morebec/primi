// pragma:one_liners
type_string_null = type(null) // "null"
type_string_boolA = type(true) // "bool"
type_string_boolB = type(false) // "bool"
type_string_numberA = type(1) // "number"
type_string_numberB = type(-1) // "number"
type_string_numberC = type(0.123) // "number"
type_string_stringA = type("") // "string"
type_string_stringB = type("ahoj") // "string"
type_string_regexA = type(r"ahoj") // "regex"
type_string_regexB = type(r"a[ho]j") // "regex"
type_string_regexC = type(r"") // "regex"
type_string_function = type(type) // "function"
type_string_arrayA = type([]) // "array"
type_string_arrayB = type([1,2,'c']) // "array"

x_number_to_number = 1.to_number() // 1
x_number_to_string = 1.to_string() // "1"
x_number_to_bool = 1.to_bool() // true
x_number_to_array = 1.to_array() // EX
x_number_to_regex = 1.to_regex() // r"1"

x_string_to_number = "a".to_number() // 0
x_string_to_string = "a".to_string() // "a"
x_string_to_bool = "a".to_bool() // true
x_string_to_array = "a".to_array() // EX
x_string_to_regex = "a".to_regex() // r"a"

x_bool_true_to_number = true.to_number() // 1
x_bool_true_to_string = true.to_string() // "1"
x_bool_true_to_bool = true.to_bool() // true
x_bool_true_to_array = true.to_array() // EX
x_bool_true_to_regex = true.to_regex() // EX

x_bool_false_to_number = false.to_number() // 0
x_bool_false_to_string = false.to_string() // ""
x_bool_false_to_bool = false.to_bool() // false
x_bool_false_to_array = false.to_array() // EX
x_bool_false_to_regex = false.to_regex() // EX

x_array_to_number = ["a"].to_number() // EX
x_array_to_string = ["a"].to_string() // EX
x_array_to_bool = ["a"].to_bool() // true
x_array_empty_to_bool = [].to_bool() // false
x_array_to_array = ["a"].to_array() // [0: "a"]
x_array_to_regex = ["a"].to_regex() // EX

x_regex_to_number = r"a".to_number() // EX
x_regex_to_string = r"a".to_string() // "a"
x_regex_to_bool = r"a".to_bool() // EX
x_regex_to_array = r"a".to_array() // EX
x_regex_to_regex = r"a".to_regex() // r"a"
